@model Models.Input

@{
		ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Inputs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			@Html.ValidationSummary(true)

			<div class="form-group">


				<div class="panel panel-primary">
					<div class="panel-heading">
						فرم ورود کالا
					</div>
					<div class="panel-body">
						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(model => model.CustomerId, new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.DropDownList("CustomerId", String.Empty)
										@Html.ValidationMessageFor(model => model.CustomerId)
									</div>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(model => model.OrderId, new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.DropDownList("OrderId", null, new { @id = "OrderId" })

										
										@*@Html.DropDownList("OrderId", String.Empty)*@
										@Html.ValidationMessageFor(model => model.OrderId)
									</div>
								</div>
							</div>

						</div>
						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(model => model.InputDate, new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.EditorFor(model => model.InputDate)

										@Html.ValidationMessageFor(model => model.InputDate)
									</div>
								</div>

							</div>
							<div class="col-md-6">
								<div class="form-group">
									@Html.LabelFor(model => model.InputTime, new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.EditorFor(model => model.InputTime)

										@Html.ValidationMessageFor(model => model.InputTime)
									</div>
								</div>
							</div>
						</div>
						<div class="row panel-row">
							<div class="panel panel-primary">
								<div class="panel-heading">هزینه ها</div>
								<div class="panel-body">
									<div class="row">
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.PostRentAmount, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.PostRentAmount, new { htmlAttributes = new { @onkeyup = "format(this)", @class = "cost" } })

													@Html.ValidationMessageFor(model => model.PostRentAmount)
												</div>
											</div>

										</div>
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.WeighbridgeAmount, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.WeighbridgeAmount, new { htmlAttributes = new { @onkeyup = "format(this)", @class = "cost" } })

													@Html.ValidationMessageFor(model => model.WeighbridgeAmount)
												</div>
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">

											<div class="form-group">
												@Html.LabelFor(model => model.CommissionAmount, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.CommissionAmount, new { htmlAttributes = new { @onkeyup = "format(this)", @class = "cost" } })

													@Html.ValidationMessageFor(model => model.CommissionAmount)
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.OtherAmount, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.OtherAmount, new { htmlAttributes = new { @onkeyup = "format(this)", @class = "cost" } })

													@Html.ValidationMessageFor(model => model.OtherAmount)
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row panel-row">
							<div class="panel panel-primary">
								<div class="panel-heading">وزن</div>
								<div class="panel-body">
									<div class="row">
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.SourceWeight, new {@class = "control-label col-md-3"})
												<div class="col-md-9">
													@Html.EditorFor(model => model.SourceWeight)

													@Html.ValidationMessageFor(model => model.SourceWeight)
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.DestinationWeight, new {@class = "control-label col-md-3"})
												<div class="col-md-9">
													@Html.EditorFor(model => model.DestinationWeight)

													@Html.ValidationMessageFor(model => model.DestinationWeight)
												</div>
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.FullWeight, new {@class = "control-label col-md-3"})
												<div class="col-md-9">
													@Html.EditorFor(model => model.FullWeight)

													@Html.ValidationMessageFor(model => model.FullWeight)
												</div>
											</div>
										</div>
										<div class="col-md-6">

											<div class="form-group">
												@Html.LabelFor(model => model.EmptyWeight, new {@class = "control-label col-md-3"})
												<div class="col-md-9">
													@Html.EditorFor(model => model.EmptyWeight)

													@Html.ValidationMessageFor(model => model.EmptyWeight)
												</div>
											</div>

										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row panel-row">
							<div class="panel panel-primary">
								<div class="panel-heading">اطلاعات ارسال</div>
								<div class="panel-body">
									<div class="row">
										<div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.CityId, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.DropDownList("CityId", String.Empty)
													@Html.ValidationMessageFor(model => model.CityId)
												</div>
											</div>


										</div><div class="col-md-6">

											<div class="form-group">
												@Html.LabelFor(model => model.TransporterId, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.DropDownList("TransporterId", String.Empty)
													@Html.ValidationMessageFor(model => model.TransporterId)
												</div>
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">

											<div class="form-group">
												@Html.LabelFor(model => model.TransporterCode, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.TransporterCode)

													@Html.ValidationMessageFor(model => model.TransporterCode)
												</div>
											</div>
										</div><div class="col-md-6">
											<div class="form-group">
												@Html.LabelFor(model => model.CarNumber, new { @class = "control-label col-md-3" })
												<div class="col-md-9">
													@Html.EditorFor(model => model.CarNumber)

													@Html.ValidationMessageFor(model => model.CarNumber)
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							
							<div class="col-md-12">
								<div class="form-group">
									@Html.LabelFor(model => model.InputDesc, new { @class = "control-label col-md-3" })
									<div class="col-md-9">
										@Html.TextAreaFor(model => model.InputDesc,new{@class="full-width-text-area"})

										@Html.ValidationMessageFor(model => model.InputDesc)
									</div>
								</div>

							</div>

						</div>
					</div>
				</div>
				 
				<div class="form-group" id="buttons">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="ایجاد" class="btn btn-primary"  onclick="ChangeDecimal();"/>
						@Html.ActionLink("بازگشت به فهرست", "Index")
					</div>
				</div>
			</div>
		</div>
}

@section scripts{
	<script>
		$( document ).ready(function() {
			$("#OrderId").append($("<option />").val("0").html("-- ایجاد حواله مادر جدید --"));

		});

		$('#CustomerId').on('change',
			function () {
				var selectedValue = $(this).val(); // < added test values

				if (selectedValue !== "") {
					var procemessage = "<option value='00000000-0000-0000-0000-000000000000'> صبرکنید...</option>";

					$("#OrderId").html(procemessage).show();

					$.ajax(
						{
							url: "/Orders/GetCustomerOrders",
							data: { id: selectedValue },
							cache: false,
							type: "POST",
							success: function (data) {
								var markup = "<option value='0'>شماره حواله</option>";
								for (var x = 0; x < data.length; x++) {
									markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
								}
								markup += "<option value='00000000-0000-0000-0000-000000000000'>-- ایجاد حواله مادر جدید --</option>";

								$("#OrderId").html(markup).show();
							},
							error: function (reponse) {
								alert("error : " + reponse);
							}
						});
				}
			});
	</script>
}